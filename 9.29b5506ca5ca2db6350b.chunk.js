webpackJsonp([9],{IICD:function(e,n){e.exports='<h1 id="表单-Forms">\n        表单 Forms\n      </h1><p>具有数据收集、校验和提交功能的表单，包含复选框、单选框、输入框、下拉选择框等元素。</p>\n<p>建议使用前对Angular 4的表单使用方式。</p>\n<blockquote>\n<p>注：当前版本 仅支持 ReactiveForm \b模板验证在接下来的版本支持。</p>\n</blockquote>\n<h2 id="何时使用">\n        何时使用\n      </h2><p>我们为 nz-form 提供了以下三种排列方式：</p>\n<ul>\n<li><p>水平排列：标签和表单控件水平排列；（默认）</p>\n</li><li><p>垂直排列：标签和表单控件上下垂直排列；</p>\n</li><li><p>行内排列：表单项水平行内排列。</p>\n</li></ul>\n<h2 id="代码演示">\n        代码演示\n      </h2><p><nt-example>\n  <nt-example-showcase>\n    <demo-form-login></demo-form-login>\n  </nt-example-showcase>\n  <nt-example-legend title="登录框">普通的登录框。</nt-example-legend>\n  <nt-example-code [code]="loginCode"></nt-example-code>\n</nt-example></p>\n<p><nt-example>\n  <nt-example-showcase>\n    <demo-form-inline></demo-form-inline>\n  </nt-example-showcase>\n  <nt-example-legend title="登录框">普通的登录框。</nt-example-legend>\n  <nt-example-code [code]="inlineCode"></nt-example-code>\n</nt-example></p>\n<h2 id="API">\n        API\n      </h2><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>color</td>\n<td>属性：颜色</td>\n<td><code>primary</code>、 <code>secondry</code>、 <code>success</code>、 <code>warning</code>、 <code>alert</code></td>\n<td><code>primary</code></td>\n</tr>\n<tr>\n<td>size</td>\n<td>属性：提示框大小</td>\n<td><code>small</code>、 <code>medium</code>、<code>large</code></td>\n<td><code>medium</code></td>\n</tr>\n<tr>\n<td>closable</td>\n<td>属性：是否显示关闭按钮</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>closed</td>\n<td>事件：关闭时触发</td>\n<td><code>function</code></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n'},"M+3/":function(e,n){e.exports='import { Component, OnInit, AfterContentInit } from \'@angular/core\';\nimport { FormGroup, FormControl, FormBuilder, Validators, FormArray } from \'@angular/forms\';\n\nimport { Subject } from \'rxjs/Subject\';\nimport \'rxjs/add/operator/filter\';\n\n@Component({\n  selector: \'demo-form-login\',\n  template: `\n  <div class="grid-x grid-margin-x">\n    <div class="cell medium-6 large-4">\n      <form [formGroup]="loginForm" (ngSubmit)="onLogin()" ntFormAutofocus>\n        <nt-form-field label="用户名">\n          <input ntInput type="text" name="username" formControlName="username" placeholder="用户名">\n        </nt-form-field>\n        <nt-form-field label="密码">\n          <input ntInput type="password" name="password" formControlName="password" placeholder="密码">\n        </nt-form-field>\n        <nt-form-field label="邮件" *ngIf="loginForm.get(\'email\')">\n          <input ntInput type="text" name="email" formControlName="email" placeholder="abc@de.com">\n        </nt-form-field>\n        <nt-form-field label="手机">\n          <input ntInput type="text" name="phone" formControlName="phone" placeholder="手机">\n        </nt-form-field>\n        <nt-form-field label="选择框">\n          <nt-select formControlName="select" placeholder="select">\n            <nt-option value="1">1</nt-option>\n            <nt-option value="2">2</nt-option>\n          </nt-select>\n        </nt-form-field>\n        <nt-form-field label="日期选择">\n          <nt-datepicker formControlName="datepicker" placeholder="datepicker"></nt-datepicker>\n        </nt-form-field>\n        <div class="grid-x">\n          <div class="small-7 columns">\n            <div class="icheck">\n              <input id="remember" type="checkbox"><label for="remember">记住我</label>\n            </div>\n          </div>\n          <div class="small-5 columns" style="text-align: right;">\n            <a>忘记密码</a>\n          </div>\n        </div>\n        <button type="submit" class="button expanded">Login</button>\n      </form>\n      <p>还没有账号？<a>现在注册!</a></p>\n      <nt-callout *ngIf="formValues">\n        {{ formValues | json }}\n      </nt-callout>\n    </div>\n  </div>\n  `\n})\nexport class DemoFormLoginComponent implements AfterContentInit {\n\n  loginForm: FormGroup;\n  loginSubject = new Subject<FormGroup>();\n\n  email: FormControl;\n\n  schedule: FormArray;\n\n  formValues: any;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.loginForm = this.formBuilder.group({\n      username: [\'\', [Validators.required, Validators.maxLength(20)]],\n      password: [\'\', [Validators.required, Validators.minLength(6)]],\n      // email: [\'\', [Validators.required, Validators.email]],\n      // schedule: this.schedule = this.formBuilder.array(Array(5).fill(this.formBuilder.control(\'\', Validators.required))),\n      phone: [\'\', [Validators.required, Validators.pattern(/^1[345678]\\d{9}$/)]],\n      select: [\'\', [Validators.required, Validators.min(2), Validators.max(5)]],\n      datepicker: [\'\', [Validators.required]],\n    });\n\n    this.email = new FormControl(\'\', [Validators.required, Validators.email]);\n\n    this.loginSubject\n      .filter(form => form.valid)\n      .subscribe(form => {\n        this.formValues = form.value;\n      });\n  }\n\n  onLogin() {\n    this.loginSubject.next(this.loginForm);\n  }\n\n  ngAfterContentInit() {\n\n  }\n}\n'},csAL:function(e,n){e.exports='import { Component, OnInit } from \'@angular/core\';\nimport { FormGroup, FormBuilder, Validators, FormControl } from \'@angular/forms\';\n\n@Component({\n  selector: \'demo-form-inline\',\n  template: `\n  <div class="grid-x grid-margin-x">\n    <div class="cell medium-6 large-4">\n      <form (ngSubmit)="onLogin()">\n        <nt-form-field label="用户名">\n          <input ntInput type="text" name="username" placeholder="用户名">\n        </nt-form-field>\n        <nt-form-field label="密码">\n          <textarea ntInput name="password" [(ngModel)]="textarea" placeholder="密码" required></textarea>\n        </nt-form-field>\n        <button type="submit" class="button expanded">Login</button>\n      </form>\n    </div>\n  </div>\n  `\n})\nexport class DemoFormInlineComponent {\n\n  usernameModel = \'\';\n  textarea = \'\';\n\n  username: FormControl;\n  password: FormControl;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.username = new FormControl(\'\', [Validators.required, Validators.maxLength(20)]);\n    this.password = new FormControl(\'\', [Validators.required, Validators.minLength(6)]);\n  }\n\n  onLogin() {\n\n  }\n}\n'},hepI:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=t("+Zyp"),r=t("mzwC"),l=t("WT6e"),i=t("Xjw4"),a=t("bfOx"),d=t("7DMc"),m=t("U5Q8"),c=t("C5nP"),s=t("p/cn"),p=this&&this.__decorate||function(e,n,t,o){var r,l=arguments.length,i=l<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,n,t,o);else for(var a=e.length-1;a>=0;a--)(r=e[a])&&(i=(l<3?r(i):l>3?r(n,t,i):r(n,t))||i);return l>3&&i&&Object.defineProperty(n,t,i),i},f=function(){return p([Object(l.n)({selector:"nt-forms-document",template:t("IICD")})],function(){this.loginCode=t("M+3/"),this.inlineCode=t("csAL")})}(),u=t("EEr4"),h=(t("wUn1"),this&&this.__decorate||function(e,n,t,o){var r,l=arguments.length,i=l<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,n,t,o);else for(var a=e.length-1;a>=0;a--)(r=e[a])&&(i=(l<3?r(i):l>3?r(n,t,i):r(n,t))||i);return l>3&&i&&Object.defineProperty(n,t,i),i}),g=this&&this.__metadata||function(e,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,n)},b=function(){function e(e){var n=this;this.formBuilder=e,this.loginSubject=new u.Subject,this.loginForm=this.formBuilder.group({username:["",[d.h.required,d.h.maxLength(20)]],password:["",[d.h.required,d.h.minLength(6)]],phone:["",[d.h.required,d.h.pattern(/^1[345678]\d{9}$/)]],select:["",[d.h.required,d.h.min(2),d.h.max(5)]],datepicker:["",[d.h.required]]}),this.email=new d.b("",[d.h.required,d.h.email]),this.loginSubject.filter(function(e){return e.valid}).subscribe(function(e){n.formValues=e.value})}return e.prototype.onLogin=function(){this.loginSubject.next(this.loginForm)},e.prototype.ngAfterContentInit=function(){},h([Object(l.n)({selector:"demo-form-login",template:'\n  <div class="grid-x grid-margin-x">\n    <div class="cell medium-6 large-4">\n      <form [formGroup]="loginForm" (ngSubmit)="onLogin()" ntFormAutofocus>\n        <nt-form-field label="用户名">\n          <input ntInput type="text" name="username" formControlName="username" placeholder="用户名">\n        </nt-form-field>\n        <nt-form-field label="密码">\n          <input ntInput type="password" name="password" formControlName="password" placeholder="密码">\n        </nt-form-field>\n        <nt-form-field label="邮件" *ngIf="loginForm.get(\'email\')">\n          <input ntInput type="text" name="email" formControlName="email" placeholder="abc@de.com">\n        </nt-form-field>\n        <nt-form-field label="手机">\n          <input ntInput type="text" name="phone" formControlName="phone" placeholder="手机">\n        </nt-form-field>\n        <nt-form-field label="选择框">\n          <nt-select formControlName="select" placeholder="select">\n            <nt-option value="1">1</nt-option>\n            <nt-option value="2">2</nt-option>\n          </nt-select>\n        </nt-form-field>\n        <nt-form-field label="日期选择">\n          <nt-datepicker formControlName="datepicker" placeholder="datepicker"></nt-datepicker>\n        </nt-form-field>\n        <div class="grid-x">\n          <div class="small-7 columns">\n            <div class="icheck">\n              <input id="remember" type="checkbox"><label for="remember">记住我</label>\n            </div>\n          </div>\n          <div class="small-5 columns" style="text-align: right;">\n            <a>忘记密码</a>\n          </div>\n        </div>\n        <button type="submit" class="button expanded">Login</button>\n      </form>\n      <p>还没有账号？<a>现在注册!</a></p>\n      <nt-callout *ngIf="formValues">\n        {{ formValues | json }}\n      </nt-callout>\n    </div>\n  </div>\n  '}),g("design:paramtypes",[d.a])],e)}(),x=this&&this.__decorate||function(e,n,t,o){var r,l=arguments.length,i=l<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,n,t,o);else for(var a=e.length-1;a>=0;a--)(r=e[a])&&(i=(l<3?r(i):l>3?r(n,t,i):r(n,t))||i);return l>3&&i&&Object.defineProperty(n,t,i),i},v=this&&this.__metadata||function(e,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,n)},y=function(){function e(e){this.formBuilder=e,this.usernameModel="",this.textarea="",this.username=new d.b("",[d.h.required,d.h.maxLength(20)]),this.password=new d.b("",[d.h.required,d.h.minLength(6)])}return e.prototype.onLogin=function(){},x([Object(l.n)({selector:"demo-form-inline",template:'\n  <div class="grid-x grid-margin-x">\n    <div class="cell medium-6 large-4">\n      <form (ngSubmit)="onLogin()">\n        <nt-form-field label="用户名">\n          <input ntInput type="text" name="username" placeholder="用户名">\n        </nt-form-field>\n        <nt-form-field label="密码">\n          <textarea ntInput name="password" [(ngModel)]="textarea" placeholder="密码" required></textarea>\n        </nt-form-field>\n        <button type="submit" class="button expanded">Login</button>\n      </form>\n    </div>\n  </div>\n  '}),v("design:paramtypes",[d.a])],e)}(),C=t("pDuO"),j=t("nRjH");t.d(n,"FormsDocumentModule",function(){return w});var F=this&&this.__decorate||function(e,n,t,o){var r,l=arguments.length,i=l<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,n,t,o);else for(var a=e.length-1;a>=0;a--)(r=e[a])&&(i=(l<3?r(i):l>3?r(n,t,i):r(n,t))||i);return l>3&&i&&Object.defineProperty(n,t,i),i},w=function(){return F([Object(l.J)({imports:[i.b,d.d,d.g,m.a,s.a,C.a,j.a,r.a,o.a,c.a,a.e.forChild([{path:"",component:f}])],declarations:[f,b,y]})],function(){})}()}});